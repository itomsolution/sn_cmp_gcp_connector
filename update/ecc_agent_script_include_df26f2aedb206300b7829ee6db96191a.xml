<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="ecc_agent_script_include">
    <ecc_agent_script_include action="INSERT_OR_UPDATE">
        <active>true</active>
        <description>Script for CAPI - Google Compute Platform API.CreateNode</description>
        <name>google-compute-1.0-CreateNode</name>
        <script><![CDATA[createVirtualMachine();

function createVirtualMachine() {

	var jsonObj = new JSON();

	var location = this.parameters.get('Location');
	var availabilityZone = this.parameters.get('AvailabilityZone');
	var vmName = "" + this.parameters.get('NodeName');
	var computeProfile = this.parameters.get('ComputeProfile');
	var osProfile = this.parameters.get('OsProfile');
	var network = this.parameters.get('Network');
	var subnet = this.parameters.get('SubnetId');
	
	var mappedHardware = jsonObj.decode(computeProfile);
	var hardwareId = mappedHardware.HardwareId;
	var localStorage = mappedHardware.LocalStorage;		
	
	var mappedOsProfile = jsonObj.decode(osProfile);
	var imageId = mappedOsProfile.ImageId;
	
	var projectId = this.parameters.get('Project');
	var gcpvm = new GoogleComputeVirtualMachine(this.parameters, this.headers);

	if (vmName.endsWith("-"))
	{
		vmName = vmName.substring(0, vmName.length - 1);
	}
	vmName = vmName.substring(0, 64); // maximum 64 chars in length
	vmName = vmName.toLowerCase(); // all lower case
	
		var instanceRequest = {
		"name": vmName,
		"machineType": "https://www.googleapis.com/compute/v1/projects/" + projectId + "/zones/" + availabilityZone + "/machineTypes/" + hardwareId,
		"disks": [{
			"type": "PERSISTENT",
			"boot": true,
			"mode": "READ_WRITE",
			"autoDelete": true,
			"deviceName": vmName,
			"initializeParams": {
				"sourceImage": imageId,
				"diskType": "https://www.googleapis.com/compute/v1/projects/" + projectId + "/zones/" + availabilityZone + "/diskTypes/pd-standard",
				"diskSizeGb": localStorage
			}
		}],
		"canIpForward": false,
		"networkInterfaces": [{
			"network": "https://www.googleapis.com/compute/v1/projects/" + projectId + "/global/networks/default",
			"subnetwork": subnet,
			"accessConfigs": [{
				"name": "External NAT",
				"type": "ONE_TO_ONE_NAT",
				"natIP": network
			}]
		}],
		"description": "",
		"scheduling": {
			"preemptible": false,
			"onHostMaintenance": "MIGRATE",
			"automaticRestart": true
		}
	};
		
	var params = {};
	params["hardwareId"] = hardwareId;
	params["imageId"] = imageId;

	var vm = gcpvm.createVirtualMachine(instanceRequest, params);

	return vm;
}]]></script>
        <sys_class_name>ecc_agent_script_include</sys_class_name>
        <sys_created_by>hardik.benani</sys_created_by>
        <sys_created_on>2018-09-17 22:48:18</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>df26f2aedb206300b7829ee6db96191a</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>google-compute-1.0-CreateNode</sys_name>
        <sys_overrides/>
        <sys_package display_value="Google Cloud Management" source="sn_cmp_gcp">40ff1aee0b2023003246ad4363673ac5</sys_package>
        <sys_policy/>
        <sys_scope display_value="Google Cloud Management">40ff1aee0b2023003246ad4363673ac5</sys_scope>
        <sys_update_name>ecc_agent_script_include_df26f2aedb206300b7829ee6db96191a</sys_update_name>
        <sys_updated_by>hardik.benani</sys_updated_by>
        <sys_updated_on>2018-09-20 04:58:10</sys_updated_on>
    </ecc_agent_script_include>
</record_update>
